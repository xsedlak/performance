name: Continuous Integration

on:
  push:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # Check out the repository under $GITHUB_WORKSPACE
      - uses: actions/checkout@v3

      # Set up the appropriate version of Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      # Install project dependencies
      - name: Install dependencies
        run: npm ci

      # Run linting checks
      - name: Run linter
        run: npm run lint

      # Run the test suite
      - name: Run tests
        run: npm test

      # Build the project
      - name: Build
        run: npm run build

  docker:
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      # Log in to GitHub Container Registry
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build and push Docker image
      - name: Build and push Docker image
        env:
          REGISTRY: ghcr.io
          IMAGE_NAME: ${{ github.repository }}
        run: |
          # Get semantic version
          SEMVER=$(git describe --tags --abbrev=0)
          # Get short SHA
          SHA=$(echo ${{ github.sha }} | cut -c1-7)
          
          # Build image
          docker build -t $REGISTRY/$IMAGE_NAME:$SEMVER .
          
          # Tag image
          docker tag $REGISTRY/$IMAGE_NAME:$SEMVER $REGISTRY/$IMAGE_NAME:$SHA
          docker tag $REGISTRY/$IMAGE_NAME:$SEMVER $REGISTRY/$IMAGE_NAME:latest
          
          # Push all tags
          docker push $REGISTRY/$IMAGE_NAME:$SEMVER
          docker push $REGISTRY/$IMAGE_NAME:$SHA
          docker push $REGISTRY/$IMAGE_NAME:latest

      # Run Trivy vulnerability scanner
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'ghcr.io/${{ github.repository }}:latest'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'